// <auto-generated />
using System;
using DineConnect.PaymentManagementService.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DineConnect.PaymentManagementService.Infrastructure.Migrations
{
    [DbContext(typeof(DineOutPaymentDbContext))]
    [Migration("20241029214135_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Invoice.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DueDate");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("InvoiceDate");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uuid")
                        .HasColumnName("PaymentId");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Entities.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("Category");

                    b.Property<int>("Gateway")
                        .HasColumnType("int")
                        .HasColumnName("Gateway");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("TransactionAmount");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TransactionDate");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentTransactions", (string)null);
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Entities.Refund", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid")
                        .HasColumnName("InvoiceId");

                    b.Property<int>("Reason")
                        .HasColumnType("int")
                        .HasColumnName("Reason");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("RefundAmount");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RefundDate");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("TransactionId");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("Refunds", (string)null);
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Amount");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("CustomerId");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid")
                        .HasColumnName("InvoiceId");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PaymentDate");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Entities.PaymentTransaction", b =>
                {
                    b.HasOne("DineConnect.PaymentManagementService.Domain.Payment.Payment", null)
                        .WithMany("Transactions")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Entities.Refund", b =>
                {
                    b.HasOne("DineConnect.PaymentManagementService.Domain.Invoice.Invoice", null)
                        .WithOne()
                        .HasForeignKey("DineConnect.PaymentManagementService.Domain.Payment.Entities.Refund", "InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DineConnect.PaymentManagementService.Domain.Payment.Entities.PaymentTransaction", null)
                        .WithOne()
                        .HasForeignKey("DineConnect.PaymentManagementService.Domain.Payment.Entities.Refund", "TransactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Payment", b =>
                {
                    b.HasOne("DineConnect.PaymentManagementService.Domain.Invoice.Invoice", null)
                        .WithOne()
                        .HasForeignKey("DineConnect.PaymentManagementService.Domain.Payment.Payment", "InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("DineConnect.PaymentManagementService.Domain.Payment.ValueObjects.PaymentMethod", "Method", b1 =>
                        {
                            b1.Property<Guid>("PaymentId")
                                .HasColumnType("uuid");

                            b1.Property<int>("MethodType")
                                .HasColumnType("integer");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.Navigation("Method")
                        .IsRequired();
                });

            modelBuilder.Entity("DineConnect.PaymentManagementService.Domain.Payment.Payment", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
